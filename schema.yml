openapi: 3.0.3
info:
  title: Transactions API
  version: 1.0.0
  description: Transactions API example
paths:
  /api/v1/companies/:
    get:
      operationId: companies_list
      description: Returns the list of companies showing its name and status.
      parameters:
      - in: query
        name: country_code
        schema:
          type: string
        examples:
          FilterByCountryCode:
            value: MX
            summary: Filter by country code
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: zip_code
        schema:
          type: string
        examples:
          FilterByZipCode:
            value: 09840
            summary: Filter by zip_code
      tags:
      - companies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
              examples:
                Example1:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 38e657b1-ea73-42d9-bc15-9d9c532fbc0e
                      name: rappi
                      company_estatus: active
                  summary: Example 1
                  description: GET /api/v1/companies/?country_code=MX
                Example2:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 38e657b1-ea73-42d9-bc15-9d9c532fbc0e
                      name: rappi
                      company_estatus: active
                  summary: Example 2
                  description: GET /api/v1/companies/?zip_code=09840
                Example3:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 38e657b1-ea73-42d9-bc15-9d9c532fbc0e
                      name: rappi
                      company_estatus: active
                  summary: Example 3
                  description: GET /api/v1/companies/
          description: ''
  /api/v1/companies/{uuid}:
    get:
      operationId: companies_retrieve
      description: Returns the detail of a company. Works with the company's id.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDetail'
          description: ''
  /api/v1/sumary/:
    get:
      operationId: sumary_list
      description: |-
        A simple ViewSet for show sumary transactions data. This endpoint has enabled
                top query_parameter to get N number of companies to show the most paid transactions.
      parameters:
      - in: query
        name: top
        schema:
          type: integer
        description: 'Filter by top N companies with the most paid transactions. Example:
          /api/v1/sumary/?top=5'
        examples:
          Example1:
            value: '5'
            summary: Top 5 companies with the most paid transactions
            description: Top 5 companies with the most paid transactions
      tags:
      - sumary
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Summary'
              examples:
                Example1:
                  value:
                  - total_companies: 162
                    total_transactions: 2654
                    paid_payments:
                      max_paid_payments:
                        company_name: rappi
                        paid_payments_number: 317
                      count: 1393
                    less_paid_payments:
                      company_name: omgyes
                      paid_payments_number: 1
                    rejected_payments:
                      max_rejected_transactions:
                        company_name: uber eats
                        rejected_transactions_number: 205
                      count: 837
                    total_price_approved: 1857116.0
                    total_price_no_approved: 21685851.0
                  summary: Example 1
                  description: Response example for sumary transactions data
          description: ''
  /api/v1/transactions/:
    get:
      operationId: transactions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
  /api/v1/transactions/{uuid}:
    get:
      operationId: transactions_retrieve
      description: Returns the detail of a transaction. Works with the transaction's
        id.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
components:
  schemas:
    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        company_estatus:
          $ref: '#/components/schemas/CompanyEstatusEnum'
      required:
      - id
      - name
    CompanyDetail:
      type: object
      properties:
        id:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
        status:
          type: string
        address:
          type: object
          additionalProperties: {}
        transactions:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        financial_data:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              additionalProperties: {}
      required:
      - address
      - financial_data
      - id
      - name
      - status
      - transactions
    CompanyEstatusEnum:
      enum:
      - active
      - inactive
      type: string
    PaginatedCompanyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    PaginatedTransactionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    StatusTransactionEnum:
      enum:
      - closed
      - reversed
      - pending
      type: string
    Summary:
      type: object
      properties:
        total_companies:
          type: integer
        total_transactions:
          type: integer
        paid_payments:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        less_paid_payments:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        rejected_payments:
          type: object
          additionalProperties:
            type: object
            additionalProperties: {}
        total_price_approved:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_price_non_approved:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - less_paid_payments
      - paid_payments
      - rejected_payments
      - total_companies
      - total_price_approved
      - total_price_non_approved
      - total_transactions
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        company_id:
          type: string
          format: uuid
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
        status_transaction:
          $ref: '#/components/schemas/StatusTransactionEnum'
        status_approved:
          type: boolean
        final_payment:
          type: boolean
      required:
      - id
      - price
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
